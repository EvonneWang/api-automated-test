<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="101" passed="88" failed="7" skipped="3">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-20T07:08:29Z" name="SuiteName" finished-at="2019-08-20T07:11:01Z" duration-ms="151508">
    <groups>
      <group name="all">
        <method signature="InvestmentApiTest.investmentFundAccountOpeningPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentFundAccountOpeningPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentFundQuotationGet()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentFundQuotationGet" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentHoldingEnquiryPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentHoldingEnquiryPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderDetailRetrievalsByIdPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderDetailRetrievalsByIdPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderPlacingPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderPlacingPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderRetrievalPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderRetrievalPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderInfoUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderInfoUpdatePost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentCancellationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentCancellationPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentSettlementAccountUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentSettlementAccountUpdatePost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentStkAccountOpeningPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentStkAccountOpeningPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentSubscriptionPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentSubscriptionPost" class="api.InvestmentApiTest"/>
        <method signature="LoanApiTest.leonMortageAccountDetailEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageAccountDetailEnquiryPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageLoanCalculaterPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageLoanCalculaterPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageMortgageLoanAccountOpeningPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageMortgageLoanAccountOpeningPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageCancellationPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageCancellationPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageMortgageLoanApplicationPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageMortgageLoanApplicationPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageNextRepaymentEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageNextRepaymentEnquiryPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageOverDueRepaymentEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageOverDueRepaymentEnquiryPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageRepaymentPlanPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageRepaymentPlanPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageRepaymentPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageRepaymentPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageTransactionEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageTransactionEnquiryPost" class="api.LoanApiTest"/>
        <method signature="SysadminApiTest.sysadminAdminControllerLoginInPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAdminControllerLoginInPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminAuthorityControllerAppDockerForDeveloperPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAuthorityControllerAppDockerForDeveloperPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminAuthorityControllerDeveloperAuthorizationPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAuthorityControllerDeveloperAuthorizationPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminAuthorityControllerGetSandBoxPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAuthorityControllerGetSandBoxPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminBranchCodeSearchControllerGetBranchCodeTableGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminBranchCodeSearchControllerGetBranchCodeTableGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminCurrencyControllerCurrencyRetrievalGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminCurrencyControllerCurrencyRetrievalGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminGenerateAvailableControllerlGetNextAvailableNumberGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminGenerateAvailableControllerlGetNextAvailableNumberGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminLoginControllerAuthorizeGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminLoginControllerAuthorizeGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminLoginControllerLoginInPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminLoginControllerLoginInPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminSandBoxSearchControllerGetSandBoxTableGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminSandBoxSearchControllerGetSandBoxTableGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminSandBoxSearchControllerGetSandBoxTableInfoPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminSandBoxSearchControllerGetSandBoxTableInfoPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminSysConfigControllerGetSystemParameterPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminSysConfigControllerGetSystemParameterPost" class="api.SysadminApiTest"/>
        <method signature="CreditCardApiTest.creditCardAccountOpeningPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardAccountOpeningPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardCanCellationPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardCanCellationPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardCreditLimitDetailsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardCreditLimitDetailsPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardLimitDecreasePost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardLimitDecreasePost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardLimitIncreasePost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardLimitIncreasePost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardLossReportingPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardLossReportingPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardNumberValidationPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardNumberValidationPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentCreditCardRepeymentPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentCreditCardRepeymentPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentOutstandingPaymentPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentOutstandingPaymentPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentProductEnquiryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentProductEnquiryPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentRedemptionHistoryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentRedemptionHistoryPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentRedemptionPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentRedemptionPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentTotalPointPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentTotalPointPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardTransactiontRansactionDetailsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardTransactiontRansactionDetailsPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardTransactiontTransactionPostingPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardTransactiontTransactionPostingPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.merchantMerchantEnquiryGet()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="merchantMerchantEnquiryGet" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.merchantTransactionsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="merchantTransactionsPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.vpointMerchantCategoryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="vpointMerchantCategoryPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.vpointNumberPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="vpointNumberPost" class="api.CreditCardApiTest"/>
        <method signature="DepositApiTest.depositAccountEnquiryAccountDetailsGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountEnquiryAccountDetailsGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountEnquiryAllAccountGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountEnquiryAllAccountGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountEnquiryPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountMaintenanceAccountClosureGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountMaintenanceAccountClosureGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountOpeningAccountCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountOpeningAccountCreationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositCurrentAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositCurrentAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositCusMainCustContactInfoUpdatePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositCusMainCustContactInfoUpdatePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositCusMainCustomerCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositCusMainCustomerCreationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositFeAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositFeAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositMetAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositMetAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositSavingAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositSavingAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTdAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTdAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositAllEnquiryCustomerNumberGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositAllEnquiryCustomerNumberGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositAllTermDepositGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositAllTermDepositGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositApplicationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositApplicationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositDrawDownPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositDrawDownPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositEnquiryPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositRenewalPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositRenewalPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionChequeBookCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionChequeBookCreationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionDepositPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionDepositPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionLogEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionLogEnquiryPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionTransferPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionTransferPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionWithdrawalPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionWithdrawalPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAccountBalancePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAccountBalancePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAccountNumberExistsPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAccountNumberExistsPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAmountFormatPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAmountFormatPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAssociatedAccountsPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAssociatedAccountsPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountCurAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountCurAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountCurrencyGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountCurrencyGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountFexAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountFexAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountFundAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountFundAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountMetAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountMetAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountSavOrCurTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountSavOrCurTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountStockAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountStockAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountTdAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountTdAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerEmailFormatPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerEmailFormatPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerExistingCustomerGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerExistingCustomerGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerIdFormatGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerIdFormatGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerPhoneNumberFormatGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerPhoneNumberFormatGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVtermDepositContractPeriodGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVtermDepositContractPeriodGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVtermDepositTdNumberExistsGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVtermDepositTdNumberExistsGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVtransactionTransTypeGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVtransactionTransTypeGet" class="api.DepositApiTest"/>
        <method signature="ForeignExchangeApiTest.depositAccountEnquiryAccountDetailsGet()[pri:0, instance:api.ForeignExchangeApiTest@77e4c80f]" name="depositAccountEnquiryAccountDetailsGet" class="api.ForeignExchangeApiTest"/>
        <method signature="InvestmentApiTest.investmentRedemptionPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentRedemptionPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentStockListGet()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentStockListGet" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentStockQuotationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentStockQuotationPost" class="api.InvestmentApiTest"/>
      </group> <!-- all -->
      <group name="loan">
        <method signature="LoanApiTest.leonMortageAccountDetailEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageAccountDetailEnquiryPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageLoanCalculaterPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageLoanCalculaterPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageMortgageLoanAccountOpeningPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageMortgageLoanAccountOpeningPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageCancellationPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageCancellationPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageMortgageLoanApplicationPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageMortgageLoanApplicationPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageNextRepaymentEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageNextRepaymentEnquiryPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageOverDueRepaymentEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageOverDueRepaymentEnquiryPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageRepaymentPlanPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageRepaymentPlanPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageRepaymentPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageRepaymentPost" class="api.LoanApiTest"/>
        <method signature="LoanApiTest.leonMortageTransactionEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" name="leonMortageTransactionEnquiryPost" class="api.LoanApiTest"/>
      </group> <!-- loan -->
      <group name="investment">
        <method signature="InvestmentApiTest.investmentFundAccountOpeningPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentFundAccountOpeningPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentFundQuotationGet()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentFundQuotationGet" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentHoldingEnquiryPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentHoldingEnquiryPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderDetailRetrievalsByIdPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderDetailRetrievalsByIdPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderPlacingPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderPlacingPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderRetrievalPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderRetrievalPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentOrderInfoUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentOrderInfoUpdatePost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentCancellationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentCancellationPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentSettlementAccountUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentSettlementAccountUpdatePost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentStkAccountOpeningPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentStkAccountOpeningPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentSubscriptionPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentSubscriptionPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentRedemptionPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentRedemptionPost" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentStockListGet()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentStockListGet" class="api.InvestmentApiTest"/>
        <method signature="InvestmentApiTest.investmentStockQuotationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" name="investmentStockQuotationPost" class="api.InvestmentApiTest"/>
      </group> <!-- investment -->
      <group name="deposit">
        <method signature="DepositApiTest.depositAccountEnquiryAccountDetailsGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountEnquiryAccountDetailsGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountEnquiryAllAccountGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountEnquiryAllAccountGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountEnquiryPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountMaintenanceAccountClosureGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountMaintenanceAccountClosureGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositAccountOpeningAccountCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositAccountOpeningAccountCreationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositCurrentAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositCurrentAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositCusMainCustContactInfoUpdatePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositCusMainCustContactInfoUpdatePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositCusMainCustomerCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositCusMainCustomerCreationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositFeAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositFeAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositMetAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositMetAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositSavingAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositSavingAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTdAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTdAccountOpeningPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositAllEnquiryCustomerNumberGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositAllEnquiryCustomerNumberGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositAllTermDepositGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositAllTermDepositGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositApplicationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositApplicationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositDrawDownPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositDrawDownPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositEnquiryPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositRenewalPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositRenewalPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionChequeBookCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionChequeBookCreationPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionDepositPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionDepositPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionLogEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionLogEnquiryPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionTransferPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionTransferPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionWithdrawalPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionWithdrawalPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAccountBalancePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAccountBalancePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAccountNumberExistsPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAccountNumberExistsPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAmountFormatPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAmountFormatPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountAssociatedAccountsPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountAssociatedAccountsPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountCurAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountCurAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountCurrencyGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountCurrencyGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountFexAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountFexAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountFundAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountFundAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountMetAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountMetAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountSavOrCurTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountSavOrCurTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountStockAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountStockAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVaccountTdAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVaccountTdAccountTypePost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerEmailFormatPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerEmailFormatPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerExistingCustomerGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerExistingCustomerGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerIdFormatGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerIdFormatGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVcustomerPhoneNumberFormatGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVcustomerPhoneNumberFormatGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVtermDepositContractPeriodGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVtermDepositContractPeriodGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVtermDepositTdNumberExistsGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVtermDepositTdNumberExistsGet" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositVtransactionTransTypeGet()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositVtransactionTransTypeGet" class="api.DepositApiTest"/>
      </group> <!-- deposit -->
      <group name="foreign-exchange">
        <method signature="ForeignExchangeApiTest.depositAccountEnquiryAccountDetailsGet()[pri:0, instance:api.ForeignExchangeApiTest@77e4c80f]" name="depositAccountEnquiryAccountDetailsGet" class="api.ForeignExchangeApiTest"/>
      </group> <!-- foreign-exchange -->
      <group name="creditCard">
        <method signature="CreditCardApiTest.creditCardAccountOpeningPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardAccountOpeningPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardCanCellationPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardCanCellationPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardCreditLimitDetailsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardCreditLimitDetailsPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardLimitDecreasePost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardLimitDecreasePost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardLimitIncreasePost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardLimitIncreasePost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardLossReportingPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardLossReportingPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardNumberValidationPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardNumberValidationPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentCreditCardRepeymentPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentCreditCardRepeymentPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentOutstandingPaymentPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentOutstandingPaymentPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentProductEnquiryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentProductEnquiryPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentRedemptionHistoryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentRedemptionHistoryPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentRedemptionPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentRedemptionPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardPaymentTotalPointPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardPaymentTotalPointPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardTransactiontRansactionDetailsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardTransactiontRansactionDetailsPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.creditCardTransactiontTransactionPostingPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="creditCardTransactiontTransactionPostingPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.merchantMerchantEnquiryGet()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="merchantMerchantEnquiryGet" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.merchantTransactionsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="merchantTransactionsPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.vpointMerchantCategoryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="vpointMerchantCategoryPost" class="api.CreditCardApiTest"/>
        <method signature="CreditCardApiTest.vpointNumberPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" name="vpointNumberPost" class="api.CreditCardApiTest"/>
      </group> <!-- creditCard -->
      <group name="error">
        <method signature="DepositApiTest.depositTermDepositTermDepositDrawDownPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositDrawDownPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTermDepositTermDepositRenewalPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTermDepositTermDepositRenewalPost" class="api.DepositApiTest"/>
        <method signature="DepositApiTest.depositTransactionLogEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" name="depositTransactionLogEnquiryPost" class="api.DepositApiTest"/>
      </group> <!-- error -->
      <group name="sysadmin">
        <method signature="SysadminApiTest.sysadminAdminControllerLoginInPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAdminControllerLoginInPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminAuthorityControllerAppDockerForDeveloperPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAuthorityControllerAppDockerForDeveloperPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminAuthorityControllerDeveloperAuthorizationPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAuthorityControllerDeveloperAuthorizationPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminAuthorityControllerGetSandBoxPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminAuthorityControllerGetSandBoxPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminBranchCodeSearchControllerGetBranchCodeTableGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminBranchCodeSearchControllerGetBranchCodeTableGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminCurrencyControllerCurrencyRetrievalGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminCurrencyControllerCurrencyRetrievalGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminGenerateAvailableControllerlGetNextAvailableNumberGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminGenerateAvailableControllerlGetNextAvailableNumberGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminLoginControllerAuthorizeGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminLoginControllerAuthorizeGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminLoginControllerLoginInPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminLoginControllerLoginInPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminSandBoxSearchControllerGetSandBoxTableGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminSandBoxSearchControllerGetSandBoxTableGet" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminSandBoxSearchControllerGetSandBoxTableInfoPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminSandBoxSearchControllerGetSandBoxTableInfoPost" class="api.SysadminApiTest"/>
        <method signature="SysadminApiTest.sysadminSysConfigControllerGetSystemParameterPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" name="sysadminSysConfigControllerGetSystemParameterPost" class="api.SysadminApiTest"/>
      </group> <!-- sysadmin -->
    </groups>
    <test started-at="2019-08-20T07:08:29Z" name="TestName" finished-at="2019-08-20T07:11:01Z" duration-ms="151508">
      <class name="api.ForeignExchangeApiTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.ForeignExchangeApiTest@77e4c80f]" started-at="2019-08-20T07:10:17Z" name="setUp" finished-at="2019-08-20T07:10:17Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="depositAccountEnquiryAccountDetailsGet()[pri:0, instance:api.ForeignExchangeApiTest@77e4c80f]" started-at="2019-08-20T07:10:17Z" name="depositAccountEnquiryAccountDetailsGet" finished-at="2019-08-20T07:10:18Z" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAccountEnquiryAccountDetailsGet -->
      </class> <!-- api.ForeignExchangeApiTest -->
      <class name="api.InvestmentApiTest">
        <test-method signature="investmentFundAccountOpeningPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:18Z" name="investmentFundAccountOpeningPost" finished-at="2019-08-20T07:10:19Z" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentFundAccountOpeningPost -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:18Z" name="setUp" finished-at="2019-08-20T07:10:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="investmentFundQuotationGet()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:19Z" name="investmentFundQuotationGet" finished-at="2019-08-20T07:10:22Z" duration-ms="3398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentFundQuotationGet -->
        <test-method signature="investmentHoldingEnquiryPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:22Z" name="investmentHoldingEnquiryPost" finished-at="2019-08-20T07:10:23Z" duration-ms="802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentHoldingEnquiryPost -->
        <test-method signature="investmentOrderDetailRetrievalsByIdPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:23Z" name="investmentOrderDetailRetrievalsByIdPost" finished-at="2019-08-20T07:10:24Z" duration-ms="813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentOrderDetailRetrievalsByIdPost -->
        <test-method signature="investmentOrderPlacingPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:24Z" name="investmentOrderPlacingPost" finished-at="2019-08-20T07:10:25Z" duration-ms="1081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentOrderPlacingPost -->
        <test-method signature="investmentSettlementAccountUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:25Z" name="investmentSettlementAccountUpdatePost" finished-at="2019-08-20T07:10:27Z" duration-ms="1891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentSettlementAccountUpdatePost -->
        <test-method signature="investmentStkAccountOpeningPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:27Z" name="investmentStkAccountOpeningPost" finished-at="2019-08-20T07:10:28Z" duration-ms="766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentStkAccountOpeningPost -->
        <test-method signature="investmentSubscriptionPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:28Z" name="investmentSubscriptionPost" finished-at="2019-08-20T07:10:29Z" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentSubscriptionPost -->
        <test-method signature="investmentRedemptionPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:29Z" name="investmentRedemptionPost" finished-at="2019-08-20T07:10:30Z" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentRedemptionPost -->
        <test-method signature="investmentStockListGet()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:30Z" name="investmentStockListGet" finished-at="2019-08-20T07:10:34Z" duration-ms="4366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentStockListGet -->
        <test-method signature="investmentStockQuotationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:34Z" name="investmentStockQuotationPost" finished-at="2019-08-20T07:10:35Z" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentStockQuotationPost -->
        <test-method signature="investmentOrderRetrievalPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:10:59Z" name="investmentOrderRetrievalPost" finished-at="2019-08-20T07:11:00Z" depends-on-methods="api.InvestmentApiTest.investmentOrderPlacingPost" duration-ms="830" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.InvestmentApiTest.investmentOrderRetrievalPost(InvestmentApiTest.java:134)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentOrderRetrievalPost -->
        <test-method signature="investmentOrderInfoUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:11:01Z" name="investmentOrderInfoUpdatePost" finished-at="2019-08-20T07:11:01Z" depends-on-methods="api.InvestmentApiTest.investmentOrderRetrievalPost" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method InvestmentApiTest.investmentOrderInfoUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method InvestmentApiTest.investmentOrderInfoUpdatePost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentOrderInfoUpdatePost -->
        <test-method signature="investmentCancellationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4]" started-at="2019-08-20T07:11:01Z" name="investmentCancellationPost" finished-at="2019-08-20T07:11:01Z" depends-on-methods="api.InvestmentApiTest.investmentOrderInfoUpdatePost" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method InvestmentApiTest.investmentCancellationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method InvestmentApiTest.investmentCancellationPost()[pri:0, instance:api.InvestmentApiTest@35fc6dc4] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- investmentCancellationPost -->
      </class> <!-- api.InvestmentApiTest -->
      <class name="api.DepositApiTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:10Z" name="setUp" finished-at="2019-08-20T07:09:10Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="depositAccountEnquiryAccountDetailsGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:10Z" name="depositAccountEnquiryAccountDetailsGet" finished-at="2019-08-20T07:09:12Z" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAccountEnquiryAccountDetailsGet -->
        <test-method signature="depositAccountEnquiryAllAccountGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:12Z" name="depositAccountEnquiryAllAccountGet" finished-at="2019-08-20T07:09:15Z" duration-ms="2817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAccountEnquiryAllAccountGet -->
        <test-method signature="depositAccountEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:15Z" name="depositAccountEnquiryPost" finished-at="2019-08-20T07:09:17Z" duration-ms="2047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAccountEnquiryPost -->
        <test-method signature="depositAccountMaintenanceAccountClosureGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:17Z" name="depositAccountMaintenanceAccountClosureGet" finished-at="2019-08-20T07:09:18Z" duration-ms="899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAccountMaintenanceAccountClosureGet -->
        <test-method signature="depositAccountOpeningAccountCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:18Z" name="depositAccountOpeningAccountCreationPost" finished-at="2019-08-20T07:09:19Z" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositAccountOpeningAccountCreationPost -->
        <test-method signature="depositCurrentAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:19Z" name="depositCurrentAccountOpeningPost" finished-at="2019-08-20T07:09:20Z" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositCurrentAccountOpeningPost -->
        <test-method signature="depositCusMainCustContactInfoUpdatePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:20Z" name="depositCusMainCustContactInfoUpdatePost" finished-at="2019-08-20T07:09:21Z" duration-ms="845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositCusMainCustContactInfoUpdatePost -->
        <test-method signature="depositCusMainCustomerCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:21Z" name="depositCusMainCustomerCreationPost" finished-at="2019-08-20T07:09:23Z" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositCusMainCustomerCreationPost -->
        <test-method signature="depositFeAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:23Z" name="depositFeAccountOpeningPost" finished-at="2019-08-20T07:09:24Z" duration-ms="945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositFeAccountOpeningPost -->
        <test-method signature="depositMetAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:24Z" name="depositMetAccountOpeningPost" finished-at="2019-08-20T07:09:26Z" duration-ms="2460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositMetAccountOpeningPost -->
        <test-method signature="depositSavingAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:26Z" name="depositSavingAccountOpeningPost" finished-at="2019-08-20T07:09:28Z" duration-ms="2270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositSavingAccountOpeningPost -->
        <test-method signature="depositTdAccountOpeningPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:28Z" name="depositTdAccountOpeningPost" finished-at="2019-08-20T07:09:30Z" duration-ms="1195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTdAccountOpeningPost -->
        <test-method signature="depositTermDepositAllEnquiryCustomerNumberGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:30Z" name="depositTermDepositAllEnquiryCustomerNumberGet" finished-at="2019-08-20T07:09:31Z" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTermDepositAllEnquiryCustomerNumberGet -->
        <test-method signature="depositTermDepositAllTermDepositGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:31Z" name="depositTermDepositAllTermDepositGet" finished-at="2019-08-20T07:09:32Z" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTermDepositAllTermDepositGet -->
        <test-method signature="depositTermDepositTermDepositApplicationPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:32Z" name="depositTermDepositTermDepositApplicationPost" finished-at="2019-08-20T07:09:35Z" duration-ms="2929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTermDepositTermDepositApplicationPost -->
        <test-method signature="depositTermDepositTermDepositDrawDownPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:35Z" name="depositTermDepositTermDepositDrawDownPost" finished-at="2019-08-20T07:09:41Z" duration-ms="6131" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.DepositApiTest.depositTermDepositTermDepositDrawDownPost(DepositApiTest.java:226)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTermDepositTermDepositDrawDownPost -->
        <test-method signature="depositTermDepositTermDepositEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:41Z" name="depositTermDepositTermDepositEnquiryPost" finished-at="2019-08-20T07:09:42Z" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTermDepositTermDepositEnquiryPost -->
        <test-method signature="depositTermDepositTermDepositRenewalPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:42Z" name="depositTermDepositTermDepositRenewalPost" finished-at="2019-08-20T07:09:43Z" duration-ms="762" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.DepositApiTest.depositTermDepositTermDepositRenewalPost(DepositApiTest.java:248)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTermDepositTermDepositRenewalPost -->
        <test-method signature="depositTransactionChequeBookCreationPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:43Z" name="depositTransactionChequeBookCreationPost" finished-at="2019-08-20T07:09:43Z" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTransactionChequeBookCreationPost -->
        <test-method signature="depositTransactionDepositPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:43Z" name="depositTransactionDepositPost" finished-at="2019-08-20T07:09:47Z" duration-ms="3755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTransactionDepositPost -->
        <test-method signature="depositTransactionLogEnquiryPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:47Z" name="depositTransactionLogEnquiryPost" finished-at="2019-08-20T07:09:49Z" duration-ms="1302" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.DepositApiTest.depositTransactionLogEnquiryPost(DepositApiTest.java:310)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTransactionLogEnquiryPost -->
        <test-method signature="depositTransactionTransferPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:49Z" name="depositTransactionTransferPost" finished-at="2019-08-20T07:09:50Z" duration-ms="967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTransactionTransferPost -->
        <test-method signature="depositTransactionWithdrawalPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:50Z" name="depositTransactionWithdrawalPost" finished-at="2019-08-20T07:09:55Z" duration-ms="5198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositTransactionWithdrawalPost -->
        <test-method signature="depositVaccountAccountBalancePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:55Z" name="depositVaccountAccountBalancePost" finished-at="2019-08-20T07:09:56Z" duration-ms="1012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountAccountBalancePost -->
        <test-method signature="depositVaccountAccountNumberExistsPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:56Z" name="depositVaccountAccountNumberExistsPost" finished-at="2019-08-20T07:09:57Z" duration-ms="882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountAccountNumberExistsPost -->
        <test-method signature="depositVaccountAmountFormatPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:57Z" name="depositVaccountAmountFormatPost" finished-at="2019-08-20T07:09:57Z" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountAmountFormatPost -->
        <test-method signature="depositVaccountAssociatedAccountsPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:57Z" name="depositVaccountAssociatedAccountsPost" finished-at="2019-08-20T07:09:58Z" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountAssociatedAccountsPost -->
        <test-method signature="depositVaccountCurAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:58Z" name="depositVaccountCurAccountTypePost" finished-at="2019-08-20T07:09:59Z" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountCurAccountTypePost -->
        <test-method signature="depositVaccountCurrencyGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:09:59Z" name="depositVaccountCurrencyGet" finished-at="2019-08-20T07:10:00Z" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountCurrencyGet -->
        <test-method signature="depositVaccountFexAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:00Z" name="depositVaccountFexAccountTypePost" finished-at="2019-08-20T07:10:01Z" duration-ms="828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountFexAccountTypePost -->
        <test-method signature="depositVaccountFundAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:01Z" name="depositVaccountFundAccountTypePost" finished-at="2019-08-20T07:10:01Z" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountFundAccountTypePost -->
        <test-method signature="depositVaccountMetAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:01Z" name="depositVaccountMetAccountTypePost" finished-at="2019-08-20T07:10:02Z" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountMetAccountTypePost -->
        <test-method signature="depositVaccountSavOrCurTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:02Z" name="depositVaccountSavOrCurTypePost" finished-at="2019-08-20T07:10:03Z" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountSavOrCurTypePost -->
        <test-method signature="depositVaccountStockAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:03Z" name="depositVaccountStockAccountTypePost" finished-at="2019-08-20T07:10:05Z" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountStockAccountTypePost -->
        <test-method signature="depositVaccountTdAccountTypePost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:05Z" name="depositVaccountTdAccountTypePost" finished-at="2019-08-20T07:10:08Z" duration-ms="3439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVaccountTdAccountTypePost -->
        <test-method signature="depositVcustomerEmailFormatPost()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:08Z" name="depositVcustomerEmailFormatPost" finished-at="2019-08-20T07:10:09Z" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVcustomerEmailFormatPost -->
        <test-method signature="depositVcustomerExistingCustomerGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:09Z" name="depositVcustomerExistingCustomerGet" finished-at="2019-08-20T07:10:10Z" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVcustomerExistingCustomerGet -->
        <test-method signature="depositVcustomerIdFormatGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:10Z" name="depositVcustomerIdFormatGet" finished-at="2019-08-20T07:10:10Z" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVcustomerIdFormatGet -->
        <test-method signature="depositVcustomerPhoneNumberFormatGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:10Z" name="depositVcustomerPhoneNumberFormatGet" finished-at="2019-08-20T07:10:11Z" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVcustomerPhoneNumberFormatGet -->
        <test-method signature="depositVtermDepositContractPeriodGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:11Z" name="depositVtermDepositContractPeriodGet" finished-at="2019-08-20T07:10:12Z" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVtermDepositContractPeriodGet -->
        <test-method signature="depositVtermDepositTdNumberExistsGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:12Z" name="depositVtermDepositTdNumberExistsGet" finished-at="2019-08-20T07:10:15Z" duration-ms="3574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVtermDepositTdNumberExistsGet -->
        <test-method signature="depositVtransactionTransTypeGet()[pri:0, instance:api.DepositApiTest@351d0846]" started-at="2019-08-20T07:10:15Z" name="depositVtransactionTransTypeGet" finished-at="2019-08-20T07:10:17Z" duration-ms="1190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- depositVtransactionTransTypeGet -->
      </class> <!-- api.DepositApiTest -->
      <class name="api.CreditCardApiTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:29Z" name="setUp" finished-at="2019-08-20T07:08:31Z" duration-ms="1443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="creditCardAccountOpeningPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:31Z" name="creditCardAccountOpeningPost" finished-at="2019-08-20T07:08:36Z" duration-ms="5476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardAccountOpeningPost -->
        <test-method signature="creditCardCanCellationPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:36Z" name="creditCardCanCellationPost" finished-at="2019-08-20T07:08:42Z" duration-ms="5254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardCanCellationPost -->
        <test-method signature="creditCardCreditLimitDetailsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:42Z" name="creditCardCreditLimitDetailsPost" finished-at="2019-08-20T07:08:45Z" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardCreditLimitDetailsPost -->
        <test-method signature="creditCardLimitDecreasePost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:45Z" name="creditCardLimitDecreasePost" finished-at="2019-08-20T07:08:45Z" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardLimitDecreasePost -->
        <test-method signature="creditCardLimitIncreasePost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:45Z" name="creditCardLimitIncreasePost" finished-at="2019-08-20T07:08:48Z" duration-ms="2058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardLimitIncreasePost -->
        <test-method signature="creditCardLossReportingPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:48Z" name="creditCardLossReportingPost" finished-at="2019-08-20T07:08:56Z" duration-ms="8302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardLossReportingPost -->
        <test-method signature="creditCardNumberValidationPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:56Z" name="creditCardNumberValidationPost" finished-at="2019-08-20T07:08:57Z" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardNumberValidationPost -->
        <test-method signature="creditCardPaymentCreditCardRepeymentPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:57Z" name="creditCardPaymentCreditCardRepeymentPost" finished-at="2019-08-20T07:08:58Z" duration-ms="1151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardPaymentCreditCardRepeymentPost -->
        <test-method signature="creditCardPaymentOutstandingPaymentPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:08:58Z" name="creditCardPaymentOutstandingPaymentPost" finished-at="2019-08-20T07:09:00Z" duration-ms="2137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardPaymentOutstandingPaymentPost -->
        <test-method signature="creditCardPaymentProductEnquiryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:00Z" name="creditCardPaymentProductEnquiryPost" finished-at="2019-08-20T07:09:01Z" duration-ms="1176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardPaymentProductEnquiryPost -->
        <test-method signature="creditCardPaymentRedemptionHistoryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:01Z" name="creditCardPaymentRedemptionHistoryPost" finished-at="2019-08-20T07:09:02Z" duration-ms="840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardPaymentRedemptionHistoryPost -->
        <test-method signature="creditCardPaymentRedemptionPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:02Z" name="creditCardPaymentRedemptionPost" finished-at="2019-08-20T07:09:03Z" duration-ms="783" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.CreditCardApiTest.creditCardPaymentRedemptionPost(CreditCardApiTest.java:194)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardPaymentRedemptionPost -->
        <test-method signature="creditCardPaymentTotalPointPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:03Z" name="creditCardPaymentTotalPointPost" finished-at="2019-08-20T07:09:03Z" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardPaymentTotalPointPost -->
        <test-method signature="creditCardTransactiontRansactionDetailsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:03Z" name="creditCardTransactiontRansactionDetailsPost" finished-at="2019-08-20T07:09:05Z" duration-ms="1548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardTransactiontRansactionDetailsPost -->
        <test-method signature="creditCardTransactiontTransactionPostingPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:05Z" name="creditCardTransactiontTransactionPostingPost" finished-at="2019-08-20T07:09:06Z" duration-ms="1075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCardTransactiontTransactionPostingPost -->
        <test-method signature="merchantMerchantEnquiryGet()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:06Z" name="merchantMerchantEnquiryGet" finished-at="2019-08-20T07:09:07Z" duration-ms="1032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- merchantMerchantEnquiryGet -->
        <test-method signature="merchantTransactionsPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:07Z" name="merchantTransactionsPost" finished-at="2019-08-20T07:09:08Z" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- merchantTransactionsPost -->
        <test-method signature="vpointMerchantCategoryPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:08Z" name="vpointMerchantCategoryPost" finished-at="2019-08-20T07:09:09Z" duration-ms="778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vpointMerchantCategoryPost -->
        <test-method signature="vpointNumberPost()[pri:0, instance:api.CreditCardApiTest@4461c7e3]" started-at="2019-08-20T07:09:09Z" name="vpointNumberPost" finished-at="2019-08-20T07:09:10Z" duration-ms="958" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vpointNumberPost -->
      </class> <!-- api.CreditCardApiTest -->
      <class name="api.LoanApiTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:35Z" name="setUp" finished-at="2019-08-20T07:10:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="leonMortageAccountDetailEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:35Z" name="leonMortageAccountDetailEnquiryPost" finished-at="2019-08-20T07:10:36Z" duration-ms="1287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageAccountDetailEnquiryPost -->
        <test-method signature="leonMortageLoanCalculaterPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:36Z" name="leonMortageLoanCalculaterPost" finished-at="2019-08-20T07:10:38Z" duration-ms="1302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageLoanCalculaterPost -->
        <test-method signature="leonMortageMortgageLoanAccountOpeningPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:38Z" name="leonMortageMortgageLoanAccountOpeningPost" finished-at="2019-08-20T07:10:39Z" duration-ms="1236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageMortgageLoanAccountOpeningPost -->
        <test-method signature="leonMortageMortgageLoanApplicationPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:39Z" name="leonMortageMortgageLoanApplicationPost" finished-at="2019-08-20T07:10:40Z" duration-ms="1333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageMortgageLoanApplicationPost -->
        <test-method signature="leonMortageNextRepaymentEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:40Z" name="leonMortageNextRepaymentEnquiryPost" finished-at="2019-08-20T07:10:44Z" duration-ms="3646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageNextRepaymentEnquiryPost -->
        <test-method signature="leonMortageOverDueRepaymentEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:44Z" name="leonMortageOverDueRepaymentEnquiryPost" finished-at="2019-08-20T07:10:44Z" duration-ms="682" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.LoanApiTest.leonMortageOverDueRepaymentEnquiryPost(LoanApiTest.java:111)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageOverDueRepaymentEnquiryPost -->
        <test-method signature="leonMortageRepaymentPlanPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:44Z" name="leonMortageRepaymentPlanPost" finished-at="2019-08-20T07:10:46Z" duration-ms="1838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageRepaymentPlanPost -->
        <test-method signature="leonMortageTransactionEnquiryPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:10:46Z" name="leonMortageTransactionEnquiryPost" finished-at="2019-08-20T07:10:47Z" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageTransactionEnquiryPost -->
        <test-method signature="leonMortageCancellationPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:11:00Z" name="leonMortageCancellationPost" finished-at="2019-08-20T07:11:01Z" depends-on-methods="api.LoanApiTest.leonMortageMortgageLoanAccountOpeningPost" duration-ms="676" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:494)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
at jdk.internal.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at api.LoanApiTest.leonMortageCancellationPost(LoanApiTest.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageCancellationPost -->
        <test-method signature="leonMortageRepaymentPost()[pri:0, instance:api.LoanApiTest@7fe8ea47]" started-at="2019-08-20T07:11:01Z" name="leonMortageRepaymentPost" finished-at="2019-08-20T07:11:01Z" depends-on-methods="api.LoanApiTest.leonMortageOverDueRepaymentEnquiryPost" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method LoanApiTest.leonMortageRepaymentPost()[pri:0, instance:api.LoanApiTest@7fe8ea47] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method LoanApiTest.leonMortageRepaymentPost()[pri:0, instance:api.LoanApiTest@7fe8ea47] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leonMortageRepaymentPost -->
      </class> <!-- api.LoanApiTest -->
      <class name="api.SysadminApiTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:47Z" name="setUp" finished-at="2019-08-20T07:10:47Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sysadminAdminControllerLoginInPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:47Z" name="sysadminAdminControllerLoginInPost" finished-at="2019-08-20T07:10:48Z" duration-ms="745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminAdminControllerLoginInPost -->
        <test-method signature="sysadminAuthorityControllerAppDockerForDeveloperPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:48Z" name="sysadminAuthorityControllerAppDockerForDeveloperPost" finished-at="2019-08-20T07:10:49Z" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminAuthorityControllerAppDockerForDeveloperPost -->
        <test-method signature="sysadminAuthorityControllerDeveloperAuthorizationPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:49Z" name="sysadminAuthorityControllerDeveloperAuthorizationPost" finished-at="2019-08-20T07:10:50Z" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminAuthorityControllerDeveloperAuthorizationPost -->
        <test-method signature="sysadminAuthorityControllerGetSandBoxPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:50Z" name="sysadminAuthorityControllerGetSandBoxPost" finished-at="2019-08-20T07:10:50Z" duration-ms="843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminAuthorityControllerGetSandBoxPost -->
        <test-method signature="sysadminBranchCodeSearchControllerGetBranchCodeTableGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:50Z" name="sysadminBranchCodeSearchControllerGetBranchCodeTableGet" finished-at="2019-08-20T07:10:51Z" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminBranchCodeSearchControllerGetBranchCodeTableGet -->
        <test-method signature="sysadminCurrencyControllerCurrencyRetrievalGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:51Z" name="sysadminCurrencyControllerCurrencyRetrievalGet" finished-at="2019-08-20T07:10:52Z" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminCurrencyControllerCurrencyRetrievalGet -->
        <test-method signature="sysadminGenerateAvailableControllerlGetNextAvailableNumberGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:52Z" name="sysadminGenerateAvailableControllerlGetNextAvailableNumberGet" finished-at="2019-08-20T07:10:53Z" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminGenerateAvailableControllerlGetNextAvailableNumberGet -->
        <test-method signature="sysadminLoginControllerAuthorizeGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:53Z" name="sysadminLoginControllerAuthorizeGet" finished-at="2019-08-20T07:10:54Z" duration-ms="908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminLoginControllerAuthorizeGet -->
        <test-method signature="sysadminLoginControllerLoginInPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:54Z" name="sysadminLoginControllerLoginInPost" finished-at="2019-08-20T07:10:54Z" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminLoginControllerLoginInPost -->
        <test-method signature="sysadminSandBoxSearchControllerGetSandBoxTableGet()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:54Z" name="sysadminSandBoxSearchControllerGetSandBoxTableGet" finished-at="2019-08-20T07:10:56Z" duration-ms="1360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminSandBoxSearchControllerGetSandBoxTableGet -->
        <test-method signature="sysadminSandBoxSearchControllerGetSandBoxTableInfoPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:56Z" name="sysadminSandBoxSearchControllerGetSandBoxTableInfoPost" finished-at="2019-08-20T07:10:57Z" duration-ms="930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminSandBoxSearchControllerGetSandBoxTableInfoPost -->
        <test-method signature="sysadminSysConfigControllerGetSystemParameterPost()[pri:0, instance:api.SysadminApiTest@226a82c4]" started-at="2019-08-20T07:10:57Z" name="sysadminSysConfigControllerGetSystemParameterPost" finished-at="2019-08-20T07:10:59Z" duration-ms="2614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sysadminSysConfigControllerGetSystemParameterPost -->
      </class> <!-- api.SysadminApiTest -->
    </test> <!-- TestName -->
  </suite> <!-- SuiteName -->
</testng-results>
